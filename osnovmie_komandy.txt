РОБОТА З ГІЛКАМИ 

git branch - список усіх локальних гілок у поточній директорії.
git branch [branch-name] - створити нову гілку.

git checkout [branch-name] - переключитися на зазначену гілку й оновити робочу директорію.
git checkout -b <name> <remote>/<branch> - переключитися на віддалену гілку.
git checkout [filename] - повернути файл у первісний стан, якщо його ще не було додано до індексу коміту.

git merge [branch] - з'єднати зміни в поточній гілці зі змінами із заданої.

git branch -a - подивитися повний список локальних і віддалених гілок.
git branch -d [branch] - видалити задану гілку.
git branch -D [branch] - примусово видалити задану гілку, ігноруючи помилки.
git branch -m <oldname> <newname> - перейменувати гілку.

РОБОТА ЗІ ЗМІНАМИ

git status - повний список змін файлів, які очікують на комміт (-s - короткий вигляд змін)

git diff - показати зміни у файлах, які ще не були додані до індексу коміту (staged).

git add [file] - зробити вказаний файл готовим для коміту.
git add . - зробити всі змінені файли готовими для коміту.
git add '*.txt' - додати тільки файли, які відповідають зазначеному виразу.

git diff --staged - показати що було додано в індекс за допомогою git add, але ще не було закоммічено.
git diff HEAD - показати, що змінилося з останнього коміту.
git diff [branch] - порівняти поточну гілку із заданою.
git difftool -d master... - показати зміни, зроблені в поточній гілці.
git diff --stat - показати статистику, які файли було змінено і як.

git reset [file] - прибрати файли з індексу коміту (зміни не губляться).

git commit - записати зміни в репозиторій. для написання повідомлення відкриється призначений редактор.
git commit -m «[descriptive message]» - записати зміни із заданим повідомленням.
git commit --amend - додати зміни до останнього коміту.

ПЕРЕГЛЯД ІСТОРІЇ

git log - список зміни поточної гілки.
git log --pretty=format:«%h %s» --graph - зміна виду відображення історії змін.
git log --author='Name' --after={1.week.ago} --pretty=oneline --abbrev-commit - подивитися над чим працював заданий користувач останній тиждень.
git log --no-merges master... - подивитися історію змін тільки для поточної гілки.
git show [commit] - показати метадату і зміни в заданому комітеті.
git show [branch]:[file] - подивитися на файл в іншій гілці, не перемикаючись на неї.

СКАСУВАННЯ КОМІТІВ

git reset - прибрати зміни з індексу коміта, самі зміни залишаться.
git reset [commit/tag] - скасувати всі коміти після вказаного коміта, зміни будуть збережені локально.
git reset --hard [commit] - примусово повернуться до вказаного коміту, не зберігаючи історію та зміни.

СИНХРОНІЗАЦІЯ ЗМІН

git fetch [bookmark] - завантажити всю історію із заданого віддаленого репозиторію.

git push - запустити поточну гілку у віддалену гілку.
git push [remote] [branch] - запустити гілку в зазначений репозиторій і віддалену гілку.

git pull - завантажити історію та зміни віддаленої гілки і зробити злиття з поточною гілкою.
git pull [remote][branch] - вказати конкретну віддалену гілку для злиття.

git remote - подивитися список доступних віддалених репозиторіїв.
git remote add [remote][url] - додати новий віддалений репозиторій.
